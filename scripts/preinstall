#!/usr/bin/env node

var fs   = require('fs')
var join = require('path').join

var got     = require('got')
var manager = require('download-manager')

var applyPatch = require('diff').applyPatch


// Source versions

const NODEJS_VERSION = "v0.11.14"


// Source URLs

const NODEJS_URL="http://nodejs.org/dist/"+NODEJS_VERSION+"/node-"+NODEJS_VERSION+".tar.gz"

// Patch OpenSSL to work with musl
const PATCH_URL = 'https://raw.githubusercontent.com/maximeh/buildroot/0400322f2d4e28faa98e31815921f54106aeb2e6/package/openssl/openssl-004-musl-termios.patch'


//
// Node.js
//

var downloads =
[
  {
    name: 'node',
    url: NODEJS_URL,
//    patch: PATCH_URL,
    action: function(callback)
    {
      var name = this.name

      got(PATCH_URL, function(error, patch)
      {
        if(error) return callback(error)

        const fileToPatch = join('deps', name,
            'deps/openssl/openssl/crypto/ui/ui_openssl.c')

        fs.readFile(fileToPatch, 'utf8', function(error, fileContent)
        {
          if(error) return callback(error)

          var patchedContent = applyPatch(fileContent, patch)

          fs.writeFile(fileToPatch, patchedContent, function(error)
          {
            if(error) return callback(error)

            // Allow to inspect NodeOS version from inside Node.js
            try
            {
              var version = require('../../../package.json').version
            }
            catch(e)
            {
              var version = '(unknown)'
            }
            var data = "exports.nodeos = '"+version+"'"

            fs.appendFile(join('deps', name, 'lib/os.js'), data, callback)
         })
       })
     })
    }
  }
]


manager(downloads, function(error)
{
  if(error) throw error;
})
